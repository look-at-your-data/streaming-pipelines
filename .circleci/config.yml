defaults: &defaults
    docker:
        - image: circleci/openjdk:8-jdk
    working_directory: /home/circleci/project

python-poetry: &python-poetry
    docker:
      - image: cimg/python:3.9

version: 2
jobs:
    airflow-tests:
        <<: *python-poetry
        steps:
            - checkout
            - restore_cache:
                keys:
                  - python-dependencies-{{ checksum "./airflow/poetry.lock" }}
            - run:
                command: ./sbin/runAirflowTests.sh
            - save_cache:
                key: python-dependencies-{{ checksum "./airflow/poetry.lock" }}
                paths:
                  - /home/circleci/.cache/pypoetry/virtualenvs

    raw-data-saver-test:
        <<: *defaults
        steps:
            - checkout
            - restore_cache:
                keys:
                    - scala-dependencies-{{ checksum "./RawDataSaver/build.sbt" }}
            - run:
                command: cd RawDataSaver && sbt test
            - save_cache:
                key: scala-dependencies-{{ checksum "./RawDataSaver/build.sbt" }}
                paths:
                    - "~/.ivy2/cache"

    station-consumer-test:
        <<: *defaults
        steps:
            - checkout
            - restore_cache:
                keys:
                    - scala-dependencies-{{ checksum "./StationConsumer/build.sbt" }}
            - run:
                command: cd StationConsumer && sbt test
            - save_cache:
                key: scala-dependencies-{{ checksum "./StationConsumer/build.sbt" }}
                paths:
                    - "~/.ivy2/cache"

    station-transformer-nyc-test:
        <<: *defaults
        steps:
            - checkout
            - restore_cache:
                keys:
                    - scala-dependencies-{{ checksum "./StationTransformerNYC/build.sbt" }}
            - run:
                command: cd StationTransformerNYC && sbt test
            - save_cache:
                key: scala-dependencies-{{ checksum "./StationTransformerNYC/build.sbt" }}
                paths:
                    - "~/.ivy2/cache"

    citibike-api-producer-test:
        <<: *defaults
        steps:
            - checkout
            - restore_cache:
                keys:
                    - java-dependencies-{{ checksum "./CitibikeApiProducer/build.gradle" }}
            - run:
                command: cd CitibikeApiProducer && ./gradlew test
            - save_cache:
                key: java-dependencies-{{ checksum "./CitibikeApiProducer/build.gradle" }}
                paths:
                    - "~/.gradle"

    build:
        <<: *defaults
        steps:
            - checkout
            - restore_cache:
                keys:
                    - java-dependencies-{{ checksum "./CitibikeApiProducer/build.gradle" }}
            - restore_cache:
                keys:
                    - scala-dependencies-{{ checksum "./RawDataSaver/build.sbt" }}-{{ checksum "./StationConsumer/build.sbt"}}-{{ checksum "./StationTransformerNYC/build.sbt"}}
            - run:
                command: ./sbin/buildAll.sh               
            - persist_to_workspace:
                root: /home/circleci/project
                paths:
                    - CitibikeApiProducer/build/
                    - RawDataSaver/target/
                    - StationConsumer/target/
                    - StationTransformerNYC/target/
            - run:
                command: ls /home/circleci/project/
            - save_cache:
                key: scala-dependencies-{{ checksum "./RawDataSaver/build.sbt" }}-{{ checksum "./StationConsumer/build.sbt"}}-{{ checksum "./StationTransformerNYC/build.sbt"}}
                paths:
                    - "~/.ivy2/cache"
            - save_cache:
                key: java-dependencies-{{ checksum "./CitibikeApiProducer/build.gradle" }}
                paths:
                    - "~/.gradle"

    deploy:
        <<: *defaults
        steps:
            - checkout
            - attach_workspace:
                at: /home/circleci/project
            - add_ssh_keys:
                fingerprints:
                  - "c4:31:97:61:4c:4f:39:74:28:37:50:13:30:d9:a6:96"
            - run:
                command: ./sbin/deploy.sh $BASTION_PUBLIC_IP $TRAINING_COHORT

workflows:
    version: 2
    build_and_deploy:
        jobs:
            - airflow-tests
            - raw-data-saver-test
            - station-consumer-test
            - station-transformer-nyc-test
            - citibike-api-producer-test
            - build:
                requires:
                    - raw-data-saver-test
                    - station-consumer-test
                    - station-transformer-nyc-test
                    - citibike-api-producer-test
            - approve-deploy:
                type: approval
                filters:
                    branches:
                        only:
                            - master
                            - start
                requires:
                    - build
                    - airflow-tests
            - deploy:
                requires:
                    - approve-deploy
